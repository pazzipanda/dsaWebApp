{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/button-bar/button-bar.component.css","webpack:///./src/app/button-bar/button-bar.component.html","webpack:///./src/app/button-bar/button-bar.component.ts","webpack:///./src/app/detail-window/detail-window.component.css","webpack:///./src/app/detail-window/detail-window.component.html","webpack:///./src/app/detail-window/detail-window.component.ts","webpack:///./src/app/object.service.ts","webpack:///./src/app/scene.service.ts","webpack:///./src/app/text-window/text-window.component.css","webpack:///./src/app/text-window/text-window.component.html","webpack:///./src/app/text-window/text-window.component.ts","webpack:///./src/app/title/title.component.css","webpack:///./src/app/title/title.component.html","webpack:///./src/app/title/title.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-title></app-title>\\n<app-detail-window></app-detail-window>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DSA Solo App';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TextWindowComponent } from './text-window/text-window.component';\nimport { DetailWindowComponent } from './detail-window/detail-window.component';\nimport { ButtonBarComponent } from './button-bar/button-bar.component';\nimport { TitleComponent } from './title/title.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TextWindowComponent,\n    DetailWindowComponent,\n    ButtonBarComponent,\n    TitleComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<app-text-window (notifyButtonBar)=\\\"showObject($event)\\\"></app-text-window>\\n<div *ngIf=\\\"details.length\\\">\\n  <div style=\\\"padding-top:3vh;padding-bottom:1vh;font-size:120%\\\">\\n    Optionen:\\n  </div>\\n  <table style=\\\"height:5vh;width:95vw;padding-bottom:1vh\\\">\\n    <tr>\\n      <td *ngFor=\\\"let button of details\\\">\\n        <button style=\\\"width:100%;height:5vh\\\" (click)=\\\"showDetail(button.text)\\\">\\n          {{button.title}}\\n        </button>\\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n<div *ngIf=\\\"!details.length\\\" style=\\\"padding-top:14vh\\\">\\n</div>\\n\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\nimport { Detail } from '../models/detail';\nimport { Object } from '../models/object';\nimport { ObjectService } from '../object.service';\nimport { DetailWindowComponent } from '../detail-window/detail-window.component';\n\n@Component({\n  selector: 'app-button-bar',\n  templateUrl: './button-bar.component.html',\n  styleUrls: ['./button-bar.component.css']\n})\nexport class ButtonBarComponent implements OnInit {\n  @Output()\n  notifyDetailWindow: EventEmitter<string> = new EventEmitter<string>();\n\n  details: Detail[];\n\n  constructor(private objectService: ObjectService) {\n\n  }\n  ngOnInit() {\n    this.details = [];\n  }\n\n  showDetail(detail: string): void {\n    this.notifyDetailWindow.emit(detail);\n  }\n\n  showObject(object: Object): void {\n    this.details = object.details;\n    this.notifyDetailWindow.emit('');\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-button-bar (notifyDetailWindow)=\\\"showDetail($event)\\\"></app-button-bar>\\n<div style=\\\"height:25vh;overflow:auto;\\\">\\n  {{text}}\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Detail } from '../models/detail';\n\n@Component({\n  selector: 'app-detail-window',\n  templateUrl: './detail-window.component.html',\n  styleUrls: ['./detail-window.component.css']\n})\nexport class DetailWindowComponent implements OnInit {\n  text: String;\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  showDetail(detailText: string) {\n    this.text = detailText;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Detail } from './models/detail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjectService {\n  text: string;\n  DETAILS: Detail[];\n\n  //test data\n  det1: Detail;\n  det2: Detail;\n  det3: Detail;\n\n\n  constructor() {\n    //test data\n    this.text = 'Hier k√∂nnte ihre Werbung stehen';\n    this.det1 = {title: 'Test 1', text: 'Blah 1'};\n    this.det2 = {title: 'Test 2', text: 'Blah 2'};\n    this.det3 = {title: 'Test 3', text: 'Blah 3'};\n    this.DETAILS = [this.det1, this.det2, this.det3];\n  }\n\n  getDetail(): Detail[] {\n    return this.DETAILS;\n  }\n  showDetail(detail: Detail): void {\n    this.text = detail.text;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { Scene } from './models/scene';\nimport { Object } from './models/object';\nimport { Detail } from './models/detail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SceneService {\n  currentScene: Scene;\n\n\n  testDetail1: Detail;\n  testDetail2: Detail;\n  testDetail3: Detail;\n  testObject1: Object;\n  testObject2: Object;\n  testObject3: Object;\n\n  constructor() {\n    this.testDetail1 = {title: 'Ansehen', text: 'Die Truhe ist etwa einen halben Schritt breit, halb so tief aber daf√ºr fast genau so hoch. Die Bretter sind aus robustem Holz, das die Jahre gut √ºberstanden hat. Scharniere und Schloss sind aus massivem Eisen.'};\n    this.testDetail2 = {title: '√ñffnen', text: 'Erst denkst du, die Truhe sei verschlossen. Nach einem kr√§ftigen Ruck merkst du aber, dass die Scharniere einfach nur verrostet waren. Als du die Truhe m√ºhsam ge√∂ffnet hast merkst du allerdings, dass sie, bis auf ein paar Spinnweben, leer ist.'};\n    this.testDetail3 = {title: 'Mitnehmen', text: 'Daf√ºr ist die Truhe nun leider doch ein wenig zu schwer.'};\n\n\n    this.testObject1 = {\n      text: 'Als du den Keller betrittst findest di vor allem eines: Viel Platz. Keine Regale, keine Schr√§nke, so gut wie gar nichts  findest du hier vor. Nur an der der Treppe gegen√ºberliegenden Wand siehst du eine ',\n      details: []\n    }\n    this.testObject2 = {\n      text: 'staubige Truhe ',\n      details: [this.testDetail1, this.testDetail2, this.testDetail3]\n    }\n    this.testObject3 = {\n      text: 'vor dir stehen.',\n      details: []\n    }\n    this.currentScene = {\n      title: 'Kellerraum',\n      text: [this.testObject1, this.testObject2, this.testObject3]\n    }\n\n  }\n\n  getScene(): Scene {\n    return this.currentScene;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"height:45vh;overflow:auto;\\\">\\n  <a *ngFor=\\\"let object of currentScene.text\\\" (click)=\\\"lookAtObject(object)\\\">{{object.text}}</a>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { Scene } from '../models/scene';\nimport { Object } from '../models/object';\nimport { SceneService } from '../scene.service';\n\n@Component({\n  selector: 'app-text-window',\n  templateUrl: './text-window.component.html',\n  styleUrls: ['./text-window.component.css']\n})\nexport class TextWindowComponent implements OnInit {\n  currentScene: Scene;\n\n  @Output()\n  notifyButtonBar: EventEmitter<Object> = new EventEmitter<Object>();\n\n\n  constructor(private sceneService: SceneService) {\n    }\n\n  ngOnInit() {\n    this.currentScene = this.sceneService.getScene();\n  }\n\n  lookAtObject(object: Object): void {\n    this.notifyButtonBar.emit(object);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"padding:0px\\\">\\n  <h2>\\n    {{title}}\\n  </h2>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SceneService } from  '../scene.service';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.css']\n})\nexport class TitleComponent implements OnInit {\n  title: string;\n  constructor(private sceneService: SceneService) { }\n\n  ngOnInit() {\n    this.getTitle();\n  }\n\n  getTitle(): void {\n    this.title = this.sceneService.getScene().title;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}